# 1.) Write a Python script to generate and print a dictionary that 
# contains a number (between 1 and n) in the form (x, x*x).
# Sample Dictionary ( n = 5) :
# Expected Output : {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}

# 2.)Find the uncommon words from 2 strings

# # s1 = "Hello how are you"
# s2 = "Hello how is"

# 3.)Wrire a code print the 8th fibanochi number

# 1 . )

'''

s1 = "hello how are you"
s2 = "hello how is"
s1 = s1.split(" ")
s2 = s2.split(" ")
for val in s1:
    if val not in s2:
        print(val)
        for val in s2:
            if val not in s1:
                print (val)
'''

'''

   
# find the 8th fibanochi number
num=8
n1=0
n2=1

for val in range(num):
    ans=n1+n2
    n1=n2
    n2=ans
print(ans)

#unparametarised constructor
class profile:
    def __init__ (self):
        print("hello world")
obj =profile()
obj.__init__()

# ? Eg:3
# * Parametarised constructor
class profile:
    def__init__(self,id,name,age):
        print(id,name,age)

obj = profile(1,"ameer"21)

#? Eg:4
class c1:
    email = "aravind@gmail.com"

    def m1(self):
        name = "aravind"
        place="gooty"
        print(name,place)
        print(self,email)

object = c1()
object.m1()


# ? Eg:5
class c1:
    def m1(self):
        name = "aravind"
        age = 21
        return name,age
        def diplay(self):
            print(name,age)
            print(self.name,self.age)
            print (self.m1())
 object = c1()
 object.display()

'''


# ? to use the variable inside the constructor in another methods
'''
class class1:
    def__init__(self):
        self.name = "arvind"
        self.email = "arvind@gmail.com"
        # return name , email # error -----> cannot use return with constuctor
        def display(self):
            print(self.name, self.email)
c1 = class1()
c1.display()


'''

# ! -------> inheritance
# the process of utilising the methods and attributes of parents class
# throught the object of child class it is called as inheritance

# ? 5 types of inheritance
# single inheritance
# multilevel inheritance
# multiple inheritance
# hybrid inheritance
# hierarchial inheritance

# * single inheritance
# ? it has only one parent class and only one child class
# ! eg : 1

'''
class parent :
    def m1(self):
        print ("Iam parent class")

class child(parent) :
    def m2(self):
        print("Iam child class")

obj = child()
obj.m1()

Iam parent class

  '''

# ! eg : 2

'''
class c1 :
    def __init__(self) :
        print("Iam consrtuctor from parent class")

class child1(c1):
    pass

obj = child1()

Iam consrtuctor from parent class

'''
# ! eg :3
'''
class parent :
    name = "arvind"

class child(parent):
    name = "name1"

    def display(self):
        print(self.name)

d = child()
d.display()
'''


# ! Multilevel inheritance


'''
class voice :
    def sound (self):
        print("All the animals have their own voices")

class dog(voice):
    def dog_voice(self):
        print("bark")

class cat(dog):
    def cat_voice(self):
        print("meow")

class parrot(cat):
    def parrot_voice(self):
        print("speak")
    

all = parrot()
all.dog_voice()
all.cat_voice()
all.sound()
all.parrot_voice()



bark
meow
All the animals have their own voices
speak

'''


# Eg:2


'''
class honda_city:
    def honda_city_engine_speces(self, cc, hp, torque, fuel_type, num_of_piston):
        print(cc, hp, torque, fuel_type, num_of_piston)

    def honda_city_body_speces (self, color, weight, height, length, vehicle_type):
        print(color, weight, height, length, vehicle_type)

class amaze(honda_city):
    def amaze_engine_speces (self, cc, Hp, torque, fuel_type, num_of_piston):
        print(cc, Hp, torque, fuel_type, num_of_piston)
    
    def amaze_body_speces (self, color, weight, height, length, vehicle_type):
        print(color, weight, height, length, vehicle_type)

class civic(amaze):
    def civic_body_speces (self, cc, Hp, torque, fuel_type, num_of_piston):
        print(cc, Hp, torque, fuel_type, num_of_piston)

class honda(civic):
    pass

honda = honda()
honda.honda_city_engine_speces(1500, 230, 2979, "petrol", 4)
honda.civic_body_speces("white", 2000, 5.5, 8, "Hatchback")

# ===> 500 230 2979 petrol 4
      white 2000 5.5 8 Hatchback
'''
# ! Multiple Inheritance
# ? It has multiple parent and 1 child
'''
class while_petrol:
    print("used to Aeroplane")

class Organic_petrol:
    def function_o(self):
        print("used for Bike, cars")

class petrol(while_petrol, Organic_petrol, premium_petrol):
    def defanition(self):
print("Petrols types")

p=petrol()
p.defanition()
p.function()    
'''        
# ! Eg:2
'''
class addition:
    def add(self, a, b):
        print(a+b)

    def mul(self,a,b):
        print(a%b)
class subract:
    def sub(self, a, b):
        print(a-b)
class multiply:
    def mul(self, a, b):
        print(a*b)
class division(addition, subract, multiply):
    def div(self, a, b):
        print(a/b)
calc=division()
calc.add(3,4)
calc.mul(5,2)
 
'''

# ? heirarical inheritance

'''
class catagory:
    def cal_name(self):
        print("vegetables")

class Tomato:
    def tomato_specs(self):
        color="black"
        taste = "neutral taste"
        self.display(color, taste)
        
class carrot(catagory):
    def carrot_specs(self):
        color="green"
        taste = "sweet"

c = carrot()
c.carrot_specs()
c.weight("30gms")

t = tomato()
t.tomato_specs()
t.weigth("30gms")

'''























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































